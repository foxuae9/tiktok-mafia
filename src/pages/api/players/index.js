import dbConnect from '@/lib/dbConnect';
import Player from '@/models/Player';

export default async function handler(req, res) {
  console.log(`๐ ${req.method} /api/players - ุจุฏุงูุฉ ุงูุทูุจ`);
  console.log('MONGODB_URI:', process.env.MONGODB_URI ? 'ููุฌูุฏ' : 'ุบูุฑ ููุฌูุฏ');
  
  try {
    console.log('๐ ุฌุงุฑู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    await dbConnect();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');

    if (req.method === 'GET') {
      try {
        console.log('๐ ุฌุงุฑู ุงูุจุญุซ ุนู ุงููุงุนุจูู...');
        const players = await Player.find({}).sort({ createdAt: -1 });
        console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ${players.length} ูุงุนุจ`);
        return res.status(200).json(players);
      } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงููุงุนุจูู:', error);
        return res.status(500).json({ message: 'ุฎุทุฃ ูู ุฌูุจ ุงููุงุนุจูู' });
      }
    }

    if (req.method === 'POST') {
      try {
        console.log('โ ุทูุจ ุชุณุฌูู ูุงุนุจ ุฌุฏูุฏ');
        
        const { nickname } = req.body;
        console.log('ุงูุงุณู ุงููุทููุจ:', nickname);
        
        if (!nickname) {
          console.log('โ ูู ูุชู ุฅุฏุฎุงู ุงุณู');
          return res.status(400).json({ message: 'ูุฑุฌู ุฅุฏุฎุงู ุงุณู ุงููุงุนุจ' });
        }

        // ุงูุชุญูู ูู ูุฌูุฏ ุงููุงุนุจ
        console.log('๐ ุงูุชุญูู ูู ูุฌูุฏ ุงููุงุนุจ...');
        const existingPlayer = await Player.findOne({ nickname });
        if (existingPlayer) {
          console.log('โ ุงูุงุณู ูุณุชุฎุฏู');
          return res.status(400).json({ message: 'ูุฐุง ุงูุงุณู ูุณุชุฎุฏู ุจุงููุนู' });
        }

        console.log('โจ ุฅูุดุงุก ูุงุนุจ ุฌุฏูุฏ...');
        const player = await Player.create({ 
          nickname,
          points: 0,
          isAdmin: false,
          isRegistered: false
        });
        
        console.log('โ ุชู ุฅูุดุงุก ุงููุงุนุจ ุจูุฌุงุญ:', player);
        return res.status(201).json(player);
      } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุงุนุจ:', error);
        return res.status(500).json({ message: 'ุฎุทุฃ ูู ุฅูุดุงุก ุงููุงุนุจ' });
      }
    }

    return res.status(405).json({ message: 'ุงูุทุฑููุฉ ุบูุฑ ูุณููุญ ุจูุง' });
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
    return res.status(500).json({ message: 'ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช' });
  }
}
